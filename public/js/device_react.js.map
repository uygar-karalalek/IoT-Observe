{"version":3,"file":"/js/device_react.js","mappings":"UAAIA,ECAAC,ECAJC,aAAY,WACRC,MAAMC,IAAI,kDAAoDC,OAAOC,aAAe,2BAChF,CACIC,iBAAiB,EACjBC,QAAS,CACL,8BAA+B,IAC/B,eAAgB,mBAChB,+BAAgC,uCAGvCC,MAAK,SAAAC,GACE,IAAIC,EAAWD,EAAQE,KACvBT,MAAMU,KAAK,iCAAmCR,OAAOS,WAAa,WAAYH,EAAU,CACpFJ,iBAAiB,EACjBC,QAAS,CACL,8BAA+B,IAC/B,eAAgB,mBAChB,+BAAgC,4CAKrD,KFtBCR,EAAU,KAUdE,aAAY,WAERC,MAAMC,IAAI,6CAA+CC,OAAOC,aAAe,2BAA4B,CACvGC,iBAAiB,EACjBC,QAAS,CACL,8BAA+B,IAC/B,eAAgB,mBAChB,+BAAgC,uCAErCC,MAAK,SAAAM,GAEW,MAAXf,GAAmBe,EAAMH,KAAKI,SAAWhB,EAAQgB,SACjDC,SAASC,eAAe,cAAcC,UAAY,GAClDnB,EAAUe,EAAMH,KAChBT,MAAMU,KAAK,gDAAiDb,EAAS,CACjEQ,QAAS,CACL,eAAgB,sBAErBC,MAAK,SAAAW,GA1BpB,IACQC,EA0B4C,IAAhCD,EAAgBR,KAAKI,OACrBC,SAASC,eAAe,gBAAgBI,UAAW,GAEnDL,SAASC,eAAe,gBAAgBI,UAAW,EACnDF,EAAgBR,KAAKW,SAAQ,SAAAC,GACzBP,SAASC,eAAe,cAAcC,WAAa,kBAAoBK,EAAOC,KAAO,KAAOD,EAAOC,KAAO,eA/B1HJ,EAAaJ,SAASC,eAAe,cAAcH,MACvDf,EAAQuB,SAAQ,SAAAC,GACRA,EAAOC,OAASJ,IAChBJ,SAASC,eAAe,WAAWH,MAAQS,EAAOE,mBAmC3D,KCzCCzB,EAAW,KACfC,aAAY,WACRC,MAAMC,IAAI,8BAA8BC,OAAOC,aAAa,aAAaG,MAAK,SAAAM,GAC1E,IAAIY,EAAeZ,EAAMH,KACrBgB,EAAqB,MAAZ3B,EAAmB0B,EAAaX,OAASW,EAAaX,OAASf,EAASe,OACrF,GAAgB,MAAZf,GAA+B,IAAX2B,EAAc,CAClC3B,EAAW0B,EACX,IAAK,IAAIE,EAAIF,EAAaX,OAASY,EAAQC,EAAIF,EAAaX,OAAQa,IAChEZ,SAASC,eAAe,QAAQC,WAAaQ,EAAaE,GAAb,QAA6B,aAGvF,M","sources":["webpack:///./resources/js/devicesPanel_react.js","webpack:///./resources/js/messages_react.js","webpack:///./resources/js/device_react.js"],"sourcesContent":["let devices = null;\n\nfunction fillDeviceType() {\n    let deviceName = document.getElementById(\"deviceName\").value;\n    devices.forEach(device => {\n        if (device.name === deviceName) {\n            document.getElementById(\"devType\").value = device.type\n        }\n    })\n}\nsetInterval(function () {\n\n    axios.get(\"http://localhost:8081/api/fetchAllDevices/\" + window.deviceUserId + \"?secret=THIS_IS_A_SECRET\", {\n        withCredentials: true,\n        headers: {\n            'Access-Control-Allow-Origin': \"*\",\n            'Content-Type': 'application/json',\n            'Access-Control-Allow-Methods': 'GET,PUT,POST,DELETE,PATCH,OPTIONS',\n        }\n    }).then(value => {\n\n        if (devices == null || value.data.length !== devices.length) {\n            document.getElementById(\"deviceName\").innerHTML = \"\";\n            devices = value.data;\n            axios.post(\"http://127.0.0.1:8000/clientDevices/toProcess\", devices, {\n                headers: {\n                    'Content-Type': 'application/json'\n                }\n            }).then(filteredDevices => {\n                if (filteredDevices.data.length === 0) {\n                    document.getElementById(\"createDevice\").disabled = true;\n                } else {\n                    document.getElementById(\"createDevice\").disabled = false;\n                    filteredDevices.data.forEach(device => {\n                        document.getElementById(\"deviceName\").innerHTML += \"<option value='\" + device.name + \"'>\" + device.name + \"</option>\"\n                    })\n                    fillDeviceType()\n                }\n            })\n        }\n    })\n}, 1000)\n","let messages = null\nsetInterval(function () {\n    axios.get(\"http://127.0.0.1:8000/user/\"+window.deviceUserId+\"/messages\").then(value => {\n        let httpMessages = value.data;\n        let offset = messages == null ? httpMessages.length : httpMessages.length - messages.length;\n        if (messages == null || offset !== 0) {\n            messages = httpMessages\n            for (let i = httpMessages.length - offset; i < httpMessages.length; i++)\n                document.getElementById(\"body\").innerHTML += httpMessages[i][\"content\"] + \"<br>\";\n        }\n    })\n}, 2000)\n","setInterval(function () {\n    axios.get(\"http://localhost:8081/api/fetchAllSensors/user/\" + window.deviceUserId + \"?secret=THIS_IS_A_SECRET\",\n        {\n            withCredentials: true,\n            headers: {\n                'Access-Control-Allow-Origin': '*',\n                'Content-Type': 'application/json',\n                'Access-Control-Allow-Methods': 'GET,PUT,POST,DELETE,PATCH,OPTIONS',\n            }\n        })\n        .then(sensors => {\n                let httpData = sensors.data;\n                axios.post(\"http://127.0.0.1:8000/process/\" + window.deviceUuid + \"/sensors\", httpData, {\n                    withCredentials: true,\n                    headers: {\n                        'Access-Control-Allow-Origin': '*',\n                        'Content-Type': 'application/json',\n                        'Access-Control-Allow-Methods': 'GET,PUT,POST,DELETE,PATCH,OPTIONS',\n                    }\n                })\n            }\n        );\n}, 1000)\n"],"names":["devices","messages","setInterval","axios","get","window","deviceUserId","withCredentials","headers","then","sensors","httpData","data","post","deviceUuid","value","length","document","getElementById","innerHTML","filteredDevices","deviceName","disabled","forEach","device","name","type","httpMessages","offset","i"],"sourceRoot":""}